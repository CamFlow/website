<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick start on CamFlow</title>
    <link>https://camflow.org/tutorial/</link>
    <description>Recent content in Quick start on CamFlow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jan 2018 21:48:57 +0100</lastBuildDate><atom:link href="https://camflow.org/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Provenance graph</title>
      <link>https://camflow.org/tutorial/graph/</link>
      <pubDate>Sun, 28 Jan 2018 21:54:02 +0100</pubDate>
      
      <guid>https://camflow.org/tutorial/graph/</guid>
      <description>CamFlow represents the execution of a system as a directed acyclic graph. Vertices in the graph represent states of kernel objects (e.g. threads, files, sockets etc&amp;hellip;) and relations represent flow of information between those states.

In the above example process 1 clone process 2. process 2 write to a pipe. process 1 read from the same pipe. Version are created to guarantees acyclicity and to represent proper odering of information (see our CCS&#39;18 paper for details).</description>
    </item>
    
    <item>
      <title>Architecture overview</title>
      <link>https://camflow.org/tutorial/architecture/</link>
      <pubDate>Sun, 28 Jan 2018 21:55:52 +0100</pubDate>
      
      <guid>https://camflow.org/tutorial/architecture/</guid>
      <description>CamFlow capture mechanism: CamFlow is an implementation of the whole-system provenance concept. The idea is to perform provenance capture from the OS perspective, while providing guarantees about its completeness. This is achieved by relying on the OS reference monitor that capture interactions between user level applications and kernel objects. CamFlow is implemented in the Linux kernel and relies on the Linux Security Module framework and the NetFilter framework to effect the capture.</description>
    </item>
    
    <item>
      <title>Walk-through</title>
      <link>https://camflow.org/tutorial/walk/</link>
      <pubDate>Sun, 28 Jan 2018 21:54:02 +0100</pubDate>
      
      <guid>https://camflow.org/tutorial/walk/</guid>
      <description>In this walk-through we explore how to capture and look at the provenance generated by wget. The tutorial assumes that CamFlow has been installed and is running on a Fedora machine, and that the reader has some familiarity with our paper describing linux provenance capture (ACM SoCC&#39;17).
You can install nano to easily edit files from the command line:
$ sudo dnf install nanoFirst we should verify that our kernel indeed contains CamFlow:</description>
    </item>
    
  </channel>
</rss>
