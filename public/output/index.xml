<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Output format on CamFlow</title>
    <link>https://camflow.org/output/</link>
    <description>Recent content in Output format on CamFlow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jan 2018 21:48:57 +0100</lastBuildDate><atom:link href="https://camflow.org/output/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Examples</title>
      <link>https://camflow.org/output/examples/</link>
      <pubDate>Sun, 28 Jan 2018 21:55:52 +0100</pubDate>
      
      <guid>https://camflow.org/output/examples/</guid>
      <description>Example of an inode vertex in W3C PROV format:
&amp;quot;ABAAAAAAACAe9wIAAAAAAE7aeaI+200UAAAAAAAAAAA=&amp;quot;: {&amp;quot;cf:id&amp;quot;: &amp;quot;194334&amp;quot;,&amp;quot;prov:type&amp;quot;: &amp;quot;fifo&amp;quot;,&amp;quot;cf:boot_id&amp;quot;: 2725894734,&amp;quot;cf:machine_id&amp;quot;: 340646718,&amp;quot;cf:version&amp;quot;: 0,&amp;quot;cf:date&amp;quot;: &amp;quot;2017:01:03T16:43:30&amp;quot;,&amp;quot;cf:jiffies&amp;quot;: &amp;quot;4297436711&amp;quot;,&amp;quot;cf:uid&amp;quot;: 1000,&amp;quot;cf:gid&amp;quot;: 1000,&amp;quot;cf:mode&amp;quot;: &amp;quot;0x1180&amp;quot;,&amp;quot;cf:secctx&amp;quot;: &amp;quot;unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023&amp;quot;,&amp;quot;cf:ino&amp;quot;: 51964,&amp;quot;cf:uuid&amp;quot;: &amp;quot;32b7218a-01a0-c7c9-17b1-666f200b8912&amp;quot;,&amp;quot;prov:label&amp;quot;: &amp;quot;[fifo] 0&amp;quot;}Example of an inode vertex in SPADE JSON format:
{&amp;quot;type&amp;quot;:&amp;quot;Entity&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;ACAAAAAAACDZtAAAAAAAAAEAAACVwxEABgAAAAAAAAA=&amp;quot;,&amp;quot;annotations&amp;quot;:{&amp;quot;object_id&amp;quot;:&amp;quot;46297&amp;quot;,&amp;quot;object_type&amp;quot;:&amp;quot;socket&amp;quot;,&amp;quot;boot_id&amp;quot;:1,&amp;quot;cf:machine_id&amp;quot;:&amp;quot;cf:1164181&amp;quot;,&amp;quot;version&amp;quot;:6,&amp;quot;cf:date&amp;quot;:&amp;quot;2020:07:11T10:41:28&amp;quot;,&amp;quot;epoch&amp;quot;:2,&amp;quot;uid&amp;quot;:0,&amp;quot;gid&amp;quot;:0,&amp;quot;mode&amp;quot;:&amp;quot;0xc1ff&amp;quot;,&amp;quot;secctx&amp;quot;:&amp;quot;system_u:object_r:unlabeled_t:s0&amp;quot;,&amp;quot;ino&amp;quot;:18274,&amp;quot;uuid&amp;quot;:&amp;quot;00000000-0000-0000-0000-000000000000&amp;quot;}}Example of a write edge in W3C PROV format:</description>
    </item>
    
    <item>
      <title>Attributes</title>
      <link>https://camflow.org/output/attributes/</link>
      <pubDate>Sun, 28 Jan 2018 21:55:52 +0100</pubDate>
      
      <guid>https://camflow.org/output/attributes/</guid>
      <description>cf:machine_id machine unique identifier. (uint32)
cf:boot_id boot identifier, unique per machine. (uint32)
cf:id vertex/edge identifier, unique per boot+machine. (uint64)
cf:date date captured when vertex/edge is recorded in userspace. (string)
cf:jiffies jiffies captured when vertex/edge is recorded in kernel (uint64)
Edge attributes cf:offset offset on file object (int64)
Vertex attributes cf:version object version (version correspond to a state of an object). (uint32)
cf:uid user ID. (uint32)
cf:gid group ID. (uint32)
cf:pid process identifier.</description>
    </item>
    
    <item>
      <title>Formal modelling</title>
      <link>https://camflow.org/output/formal/</link>
      <pubDate>Sun, 28 Jan 2018 21:55:52 +0100</pubDate>
      
      <guid>https://camflow.org/output/formal/</guid>
      <description>We are exploring means to formally model the provenance generated by CamFlow capture system. This is achieved by performing static analysis of the kernel source code. We have made available the models corresponding to LSM hooks and system calls. The models are also available in raw dot format. An early description of the process is described in our CCS&#39;18 paper.</description>
    </item>
    
  </channel>
</rss>
